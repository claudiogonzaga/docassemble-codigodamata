---
objects:
  - requeridos: DAList.using(object_type=Individual)

---
question: Nomear o requerido? (representado, réu, suspeito da ação ilícita)
yesno: requeridos.there_are_any
default: yes

---
question: Adicionar mais um requerido?
yesno: requeridos.there_is_another

---
code: |
  pessoas = requeridos.complete_elements()

---
reconsider:
  - pessoas

question: |
  Quem é o ${ ordinal(i) } requerido?
fields:
  - Existing or New: requeridos[i].existing_or_new
    datatype: radio
    default: New
    choices:
      - Existing
      - New
  - Person: requeridos[i]
    show if:
      variable: requeridos[i].existing_or_new
      is: Existing
    datatype: object
    choices: pessoas
  - Nome: requeridos[i].name.first
    help: "Se não for uma petição inicial ou denúncia, não é necessário qualificar o requerido por inteiro."
  - Nacionalidade: requeridos[i].nacionalidade
    default: "de nacionalidade brasileira"
    required: False
    show if:
      variable: requeridos[i].existing_or_new
      is: New
  - Estado Civil: requeridos[i].estadocivil
    required: False
    default: ignorado
    datatype: radio
    choices:
      - solteiro(a)
      - casado(a)
      - divorciado(a)
      - viúvo(a)
      - convivente em união estável
      - ignorado
    show if:
      variable: requeridos[i].existing_or_new
      is: New
      
  - Ocupação: requeridos[i].ocupacao
    required: False
    hint: "Selecione uma ou escreva uma resposta"    
    datatype: combobox
    choices:
      - produtor rural
      - pecuarista
      - lavrador
      - serviços gerais
      - do lar
      - de ocupação ignorada
    show if:
      variable: requeridos[i].existing_or_new
      is: New

  - Data de Nascimento: requeridos[i].birthdate
    required: False
    datatype: date
    show if:
      variable: requeridos[i].existing_or_new
      is: New
  - Endereço: requeridos[i].address.address
    required: False
    show if:
      variable: requeridos[i].existing_or_new
      is: New
  - Número: requeridos[i].address.unit
    required: False
    show if:
      variable: requeridos[i].existing_or_new
      is: New   
  - Cidade: requeridos[i].address.city
    required: False
    datatype: combobox
    hint: "Selecione uma ou escreva uma resposta"
    code: |
      dic_promotorias[orgao_execucao]["municipios_abrangencia"]
    show if:
      variable: requeridos[i].existing_or_new
      is: New
  - Estado: requeridos[i].address.state
    required: False
    code: |
      lista_estados()
    default: "Mato Grosso"  
    show if:
      variable: requeridos[i].existing_or_new
      is: New 
  - CEP: requeridos[i].address.postal_code
    show if:
      variable: requeridos[i].existing_or_new
      is: New
    required: False
  - País: requeridos[i].address.country
    code: |
      countries_list()
    default: "Brazil"
    required: False
    show if:
      variable: requeridos[i].existing_or_new
      is: New
  - Telefone celular: requeridos[i].mobile_number
    required: False
    show if:
      variable: requeridos[i].existing_or_new
      is: New
  - Nome da mãe: requeridos[i].nome_mae
    required: False
    default: "de filiação ignorada"
    show if:
      variable: requeridos[i].existing_or_new
      is: New      
  - Usa whatsapp: requeridos[i].uses_whatsapp
    required: False
    datatype: yesno
    show if:
      variable: requeridos[i].existing_or_new
      is: New
  - qualificação em texto: requeridos[i].qualificacao
    required: False
    datatype: area
    show if:
      code: |
        False
---
include:
  - comum_lista_estados.yml
mandatory: True
code: |
  if requeridos.there_are_any:
    todos_requeridos = ''
    for requerido in requeridos:
      todos_requeridos = '' + requerido.name.full().upper() + ', '
      qualificacao_texto = requerido.nacionalidade + ", "+ requerido.estadocivil + ", " + requerido.ocupacao + ", nascido aos " + requerido.birthdate + ", filho de " + requerido.nome_mae +  ", residente e domiciliado na " + requerido.address.address + " " + requerido.address.unit +  ", "+ requerido.address.city + ", " + requerido.address.state +  ", telefone: " + requerido.mobile_number +";"
      requerido.qualificacao = qualificacao_texto
    for requerido in requeridos:
      requerido.name.first = requerido.name.first.upper()
      